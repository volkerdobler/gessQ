{
  "include": {
    "prefix": "include",
    "body": "#include \"$1\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "includeifexists": {
    "prefix": "includeifexists",
    "body": "#includeifexists \"$1\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "iAB, initActionBlock": {
    "prefix": "iAB, initActionBlock",
    "body": "${2:InitActionBlock = {\r\n${1}\r\n\\};}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "iAB, cAB, bAB, paAC, initActionBlock, continueActionBlock, preAssertionActionBlock, backActionBlock": {
    "prefix": "iAB, cAB, initActionBlock, continueActionBlock, preAssertionActionBlock, backActionBlock",
    "body": "${2:InitActionBlock = {\r\n${1}\r\n\\};}\r\n${4:continueActionBlock = {\r\n${3}\r\n\\};}\r\n${6:preAssertionActionBlock = {\r\n${5}\r\n\\};\r\n}\r\n${8:backActionBlock = {\r\n${7}\r\n\\};\r\n}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "sAB, rAB, tAB, cmAB, clAB, startActionBlock, resumeActionBlock, timeoutActionBlock, cmplActionBlock, changelanguageActionBlock": {
    "prefix": "sAB, rAB, tAB, complete, startActionBlock, resumeActionBlock, timeoutActionBlock, cmplActionBlock",
    "body": "${2:startActionBlock = {\r\n${1}\r\n\\};}\r\n${4:resumeActionBlock = {\r\n${3}\r\n\\};}\r\n${6:timeoutAssertationActionBlock = {\r\n${5}\r\n\\};}\r\n${8:cmplActionBlock = {\r\n${7}\r\n\\};\r\n}\r\n${10:changelanguageActionBlock = {\r\n${9}\r\n\\};\r\n}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "assert": {
    "prefix": "assert, ass",
    "body": "assert (${1:true}) \"${2:Nachricht}\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "assertexit": {
    "prefix": "assertexit, assert, ass",
    "body": "assert (${1:true}) \"${2:Nachricht}\" ${4:exit ${3:ExitCode}};\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "assertexitattempts": {
    "prefix": "assertexitattempts, assert, ass",
    "body": "assert (${1:true}) \"${2:Nachricht}\" ${4:exit ${3:ExitCode}} ${7:attempts ${6:1}};\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "block": {
    "prefix": "block",
    "body": "block $1 = ( $2 );\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "followup": {
    "prefix": "followup",
    "body": "followup;\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "cAB, continueActionBlock": {
    "prefix": "cAB, continueActionBlock",
    "body": "${2:continueActionBlock = {\r\n  ${1}\r\n\\};\r\n}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "cmAB, cmplActionBlock": {
    "prefix": "cmAB, cmplActionBlock",
    "body": "${2:cmplActionBlock = {\r\n  ${1}\r\n\\};\r\n}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "clAB, changelanguageActionBlock": {
    "prefix": "clAB, changelanguageActionBlock",
    "body": "${2:changelanguageActionBlock = {\r\n  ${1}\r\n\\};\r\n}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "cgo, check_grid_open\r\n": {
    "prefix": "check_grid_open\r\n",
    "body": "&check_grid_open;\\$co1=${1:Frage};\\$co2=${2:Code};\\$co3=${3:Valid};\\$co4=\"${4:Sonstiges}\"\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "co, check_open\r\n": {
    "prefix": "check_open\r\n",
    "body": "&check_open;\\$co1=${1:Frage};\\$co2=${2:Code};\\$co3=${1:Frage}.${2:Code}.open;\\$co4=\"${3:Sonstiges}\"\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "singleopen, so": {
    "prefix": "so, singleopen",
    "body": "&singleopen;\\$name=\"${1:Frage}\";\\$label=\"${2:Code}\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "multiopen, mo": {
    "prefix": "mo, multiopen",
    "body": "&multiopen;\\$name=\"${1:Frage}\";\\$label=\"${2:Code}\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "multiopen_x, mox": {
    "prefix": "mox, multiopen_x",
    "body": [
      "javascript=\"",
      "&multiopen_x;\\$name=\"${1:Frage}\";\\$label=\"${2:Code1}\";",
      "&multiopen_x;\\$name=\"${1:Frage}\";\\$label=\"${3:Code2}\";",
      "\";"
    ],
    "description": "",
    "scope": "source.gessQ"
  },
  "css": {
    "prefix": "css",
    "body": "css=\"\r\n${1:  css-Anweisung}\r\n\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "flt, filter": {
    "prefix": "flt, filter",
    "body": "flt (${1:true})",
    "description": "",
    "scope": "source.gessQ"
  },
  "flt=": {
    "prefix": "flt=",
    "body": "flt = ($1);",
    "description": "",
    "scope": "source.gessQ"
  },
  "setfilter": {
    "prefix": "setfilter",
    "body": "setfilter = ($1);",
    "description": "",
    "scope": "source.gessQ"
  },
  "endfilter": {
    "prefix": "endfilter",
    "body": "endfilter;",
    "description": "",
    "scope": "source.gessQ"
  },
  "grp, group": {
    "prefix": "grp, group",
    "body": "group ${1:Frage};\r\nlabels=\r\n1 \"${2}\" (${3:true})\r\n${6:2 \"${4}\" (${5:true})}\r\n;\r\n${7:export;}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "Postinterviewerhelptext": {
    "prefix": "Postinterviewerhelptext",
    "body": "postinterviewerhelptext = \"${1}\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "Preinterviewerhelptext": {
    "prefix": "Preinterviewerhelptext",
    "body": "preinterviewerhelptext = \"${1}\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "Posthelptext": {
    "prefix": "Posthelptext",
    "body": "posthelptext = \"${1}\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "Prehelptext": {
    "prefix": "Prehelptext",
    "body": "prehelptext = \"${1}\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "HtmlPreText, HtmlPostText": {
    "prefix": "HtmlPreText, HtmlPostText",
    "body": "${2:HtmlpreText=\"\r\n${1}\r\n\";}\r\n${4:HtmlpostText=\"\r\n${3}\r\n\";}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "if": {
    "prefix": "if",
    "body": "if ( ${1:condition} ) {\r\n $2\r\n\\};\r\n",
    "description": "if then",
    "scope": "source.gessQ"
  },
  "INT:": {
    "prefix": "INT:",
    "body": "<p><i><b>INT: </b>$1</i></p>\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "js, javascript": {
    "prefix": "js, javascript",
    "body": "javascript=\"\r\n${1:alert('Hallo in einem Fenster');}\r\n\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "jshandler": {
    "prefix": "jshandler",
    "body": "jshandler=\"\r\n${1:alert('Hallo bei Aktion');}\r\n\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "lab, labels": {
    "prefix": "lab, labels",
    "body": "labels=\r\n$0\r\n;",
    "description": "",
    "scope": "source.gessQ"
  },
  "sgq, singlegridq": {
    "prefix": "sgq, singlegridq",
    "body": "singlegridq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";\r\n}gridlabels=\r\n${6}\r\n;\r\ngriditems=\r\n${7}\r\n;\r\n$0",
    "description": "",
    "scope": "source.gessQ"
  },
  "mgq, multigridq": {
    "prefix": "mgq, multigridq",
    "body": "multigridq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";\r\n}gridlabels=\r\n${6}\r\n;\r\ngriditems=\r\n${7}\r\n;\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "showAllErrors": {
    "prefix": "showAllErrors",
    "body": "showAllErrors;",
    "description": "",
    "scope": "source.gessQ"
  },
  "gridLabelRestrict": {
    "prefix": "gridLabelRestrict",
    "body": "gridLabelRestrict = (${1:Variable});\r\n$0",
    "description": "Filtert die Labelliste",
    "scope": "source.gessQ"
  },
  "gridItemRestrict": {
    "prefix": "gridItemRestrict",
    "body": "gridItemRestrict = (${1:Variable});\r\n$0",
    "description": "Filtert die Itemliste",
    "scope": "source.gessQ"
  },
  "gridlabelheader": {
    "prefix": "gridlabelheader",
    "body": "gridLabelHeader = (\r\n\"${1:Text über erster Labelgruppe}\"\r\n);\r\n$0",
    "description": "Text über erster Labelgruppe",
    "scope": "source.gessQ"
  },
  "gridlabelfooter": {
    "prefix": "gridlabelfooter",
    "body": "gridlabelfooter = (\r\n\"${1:Text unter erster Labelgruppe}\"\r\n);\r\n$0",
    "description": "Text unter erster Labelgruppe",
    "scope": "source.gessQ"
  },
  "anchortext": {
    "prefix": "anchortext",
    "body": "anchorText = \"${1:Text links oben}\";\r\n$0",
    "description": "Text links oben",
    "scope": "source.gessQ"
  },
  "repeatGridAnchor": {
    "prefix": "repeatGridAnchor",
    "body": "repeatGridAnchor;\r\n$0",
    "description": "Anchortext wiederholen",
    "scope": "source.gessQ"
  },
  "labelrepeat": {
    "prefix": "labelrepeat",
    "body": "labelRepeat = ${1:20};\r\n$0",
    "description": "Labels wiederholen",
    "scope": "source.gessQ"
  },
  "sq, singleq": {
    "prefix": "sq, singleq",
    "body": "singleq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";\r\n}${6:labels=\r\n};",
    "description": "",
    "scope": "source.gessQ"
  },
  "mq, multiq": {
    "prefix": "mq, multiq",
    "body": "multiq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";\r\n}${6:labels=\r\n;\r\n}",
    "description": "",
    "scope": "source.gessQ"
  },
  "nq, numq": {
    "prefix": "nq, numq",
    "body": "numq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";\r\n}labels=\r\n1 \"${6:@input}\" format ${7:onf_FORMAT}\r\n;\r\n$0",
    "description": "",
    "scope": "source.gessQ"
  },
  "sum": {
    "prefix": "sum",
    "body": "sum \"${1:Text}\" [${2:Labelcodes}]",
    "description": "Summe für NumQ (Wenn keine Labelcodes angegeben, dann werden alle genommen)",
    "scope": "source.gessQ"
  },
  "onf, opennumformat": {
    "prefix": "onf, opennumformat",
    "body": "opennumformat ${1:onf_FORMAT} = ${2:minVorkomma} ${3:maxVorkomma} ${4:minNachkomma} ${5:maxNachkomma} ${6:minWert} ${7:maxWert} ${8:ZusatzWert} \"${9:Fehlermeldung}\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "oq, openq": {
    "prefix": "oq, openq",
    "body": "openq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "pq, passwdq": {
    "prefix": "pq, passwdq",
    "body": "passwdq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "uq, UploadQ": {
    "prefix": "uq, UploadQ",
    "body": "UploadQ ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";}\r\nMaxFileSize = 2048; // max. erlaubte Dateigröße in KB \r\nExtensions = \"png jpg gif bmp jpeg tif psp xcf\"; //Liste der erlaubten Dateinamenserweiterungen \r\nFileViolation = \"Datei zu groß oder falsches Format.\"; //Auszugebende Fehlermeldung \r\nassert (hasMediaUpload(${1:Name}) eq 1) \"Dateiupload fehlgeschlagen.\" attempts 3; \r\n$0",
    "description": "",
    "scope": "source.gessQ"
  },
  "qv, quotavar": {
    "prefix": "qv, quotavar",
    "body": "quotavar $1 = ($2);\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "qgb, quotagroupbegin": {
    "prefix": "qgb, quotagroupbegin",
    "body": "quotagroup $1 begin;\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "qge, quotagroupend": {
    "prefix": "qge, quotagroupend",
    "body": "quotagroup end;\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "screen": {
    "prefix": "screen",
    "body": "screen $1 = ${2|column,row|}( $3 );\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "set": {
    "prefix": "set",
    "body": "set(${1:variable}=${2:value});\n",
    "description": "if then",
    "scope": "source.gessQ"
  },
  "sortID": {
    "prefix": "sortID",
    "body": "sortID=\"${1:sID_01}\";\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "sortorder": {
    "prefix": "sortorder",
    "body": "sortOrder = ${1};\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "tq, textq": {
    "prefix": "tq, textq",
    "body": "textq ${1:Frage};\r\n${3:text=\"\r\n${2:Fragentext}\r\n\";\r\n}${5:title=\"\r\n${4}\r\n\";\r\n}\r\n",
    "description": "",
    "scope": "source.gessQ"
  },
  "@insert": {
    "prefix": "insert",
    "body": "@insert($0)",
    "description": "",
    "scope": "source.gessQ"
  },
  "defaultnomissing": {
    "prefix": "defaultnomissing, dnm",
    "body": "defaultnomissing = ${1| ,no,yes|};",
    "description": "",
    "scope": "source.gessQ"
  },
  "nomissing": {
    "prefix": "nomissing",
    "body": "nomissing = ${1|no,yes|};",
    "description": "",
    "scope": "source.gessQ"
  },
  "textarearows": {
    "prefix": "textarearows",
    "body": "HTML{ textAreaRows = ${1:Anzahl Zeilen in der Offenen}; };",
    "description": "",
    "scope": "source.gessQ"
  },
  "textareacols": {
    "prefix": "textareacols",
    "body": "HTML{ textAreaCols = ${1:Anzahl Spalten in der Offenen}; };",
    "description": "",
    "scope": "source.gessQ"
  },
  "singleQAutoSubmit": {
    "prefix": "singleQAutoSubmit",
    "body": "HTML{ singleQAutoSubmit = ${1|no,yes|}; };",
    "description": "",
    "scope": "source.gessQ"
  },
  "SingleQFormat": {
    "prefix": "SingleQFormat",
    "body": "HTML{ SingleQFormat = ${1|standard,table,select|}; };",
    "description": "",
    "scope": "source.gessQ"
  },
  "input": {
    "prefix": "input",
    "body": "HTML{ Input = ${1|yes,no|}; };",
    "description": "",
    "scope": "source.gessQ"
  },
  "num()": {
    "prefix": "num",
    "body": "num($1)",
    "description": "",
    "scope": "source.gessQ"
  },
  "timessent()": {
    "prefix": "timessent",
    "body": "timessent($1)",
    "description": "",
    "scope": "source.gessQ"
  },
  "transpose": {
    "prefix": "trans,transpose",
    "body": "transpose;",
    "description": "",
    "scope": "source.gessQ"
  },
  "bipolar": {
    "prefix": "bipolar",
    "body": "bipolar;",
    "description": "",
    "scope": "source.gessQ"
  },
  "restrict": {
    "prefix": "restrict",
    "body": "restrict = $1;",
    "description": "",
    "scope": "source.gessQ"
  },
  "array": {
    "prefix": "array",
    "body": "array ${1:Name}[${2:größe}];${3:export;}",
    "description": "",
    "scope": "source.gessQ"
  },
  "clear": {
    "prefix": "clear",
    "body": "clear( $1 );",
    "description": "",
    "scope": "source.gessQ"
  },
  "syncsort": {
    "prefix": "syncsort",
    "body": "syncsort( ${1:ARR1}, ${2:ARR2}, ${3|ascending,descending|});",
    "description": "sortiert die Inhalte von ARR1 aufsteigend (ascending) oder absteigend (descending) an. Synchron zu dem Schema, wie die Elemente in ARR1 ihre Positionen verändern, wird auch ARR2 umsortiert.",
    "scope": "source.gessQ"
  },
  "lalign": {
    "prefix": "lalign",
    "body": "lalign( $1 );",
    "description": "",
    "scope": "source.gessQ"
  },
  "target": {
    "prefix": "target",
    "body": "target( $1 )",
    "description": "",
    "scope": "source.gessQ"
  },
  "macro": {
    "prefix": "macro",
    "body": "#macro ${1:Name} \r\n$2\r\n#endmacro",
    "description": "",
    "scope": "source.gessQ"
  },
  "domacro": {
    "prefix": "domacro",
    "body": "#domacro ${1:Macro} ${2:Eingabe};",
    "description": "",
    "scope": "source.gessQ"
  },
  "ifdefelse": {
    "prefix": "ifdefelse",
    "body": "#ifdef ${1:Name} \r\n$2\r\n#else\r\n$3\r\n#endif",
    "description": "",
    "scope": "source.gessQ"
  },
  "ifdef": {
    "prefix": "ifdef",
    "body": "#ifdef ${1:Name} \r\n$2\r\n#endif",
    "description": "",
    "scope": "source.gessQ"
  },
  "title": {
    "prefix": "title",
    "body": "title=\"$1\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "text": {
    "prefix": "text",
    "body": "text=\"\r\n$1\r\n\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "ExportText": {
    "prefix": "ExportText",
    "body": "ExportText=\"$1\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "ExportTitle": {
    "prefix": "ExportTitle",
    "body": "ExportTitle=\"$1\";",
    "description": "",
    "scope": "source.gessQ"
  },
  "ExportLabel": {
    "prefix": "ExportLabel",
    "body": "ExportLabel=\"$1\"",
    "description": "",
    "scope": "source.gessQ"
  },
  "ShowMaxLabels": {
    "prefix": "ShowMaxLabels",
    "body": "ShowMaxLabels = ${1:Number};",
    "description": "",
    "scope": "source.gessQ"
  },
  "gridlabels copy": {
    "prefix": "gridlabels copy, copy gridlabels",
    "body": "gridlabels copy ${1:Frage};",
    "description": "",
    "scope": "source.gessQ"
  },
  "griditems copy": {
    "prefix": "griditems copy, copy griditems",
    "body": "griditems copy ${1:Frage};",
    "description": "",
    "scope": "source.gessQ"
  },
  "labels copy": {
    "prefix": "labels copy, copy labels",
    "body": "labels copy ${1:Frage};",
    "description": "",
    "scope": "source.gessQ"
  },
  "autoChangePBar": {
    "prefix": "autoChangePBar",
    "body": "autoChangePBar = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "BackbuttonOnFinish": {
    "prefix": "BackbuttonOnFinish",
    "body": "BackbuttonOnFinish = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "BadPasswordMsg": {
    "prefix": "BadPasswordMsg",
    "body": "BadPasswordMsg = \"\r\n${1:Das eingegebene Passwort ist falsch.}\r\n\";\r\n",
    "description": "Default: Sorry, but this password is wrong.",
    "scope": "source.gessQ"
  },
  "CaseInUseMsg": {
    "prefix": "CaseInUseMsg",
    "body": "CaseInUseMsg = \"\r\n${1:Ihr Interview kann im Moment nicht betreten werden.\r\n<br>Bitte versuchen Sie es später noch einmal.}\r\n\";\r\n",
    "description": "Default: The requested case is currently in use. Please try again later.",
    "scope": "source.gessQ"
  },
  "ClearOnFlt": {
    "prefix": "ClearOnFlt",
    "body": "ClearOnFlt = ${1|yes,no|};\r\n",
    "description": "Default: Yes",
    "scope": "source.gessQ"
  },
  "CompletedExitCode": {
    "prefix": "CompletedExitCode",
    "body": "CompletedExitCode = ${1:Number};\r\n",
    "description": "Default: 1",
    "scope": "source.gessQ"
  },
  "DataWriteCondition": {
    "prefix": "DataWriteCondition",
    "body": "DataWriteCondition = ${1:Bedingung};\r\n",
    "description": "Default: false",
    "scope": "source.gessQ"
  },
  "DisableExitOnAssert": {
    "prefix": "DisableExitOnAssert",
    "body": "DisableExitOnAssert = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "EnableKeyboard": {
    "prefix": "EnableKeyboard",
    "body": "EnableKeyboard = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "EnterPasswordMsg": {
    "prefix": "EnterPasswordMsg",
    "body": "EnterPasswordMsg = \"\r\n${1:Bitte definieren Sie hier ein eigenes Passwort für den Zugang zu Ihrer Befragung.}\r\n\";\r\n",
    "description": "Default: Please enter your password to access your personal questionnaire.",
    "scope": "source.gessQ"
  },
  "EnterPasswordButton": {
    "prefix": "EnterPasswordButton",
    "body": "EnterPasswordButton = \"\r\n${1:Weiter}\r\n\";\r\n",
    "description": "Default: OK",
    "scope": "source.gessQ"
  },
  "ExportBlacklist": {
    "prefix": "ExportBlacklist",
    "body": "ExportBlacklist = \"${1:VAR}\";\r\n",
    "description": "Default: \"\"",
    "scope": "source.gessQ"
  },
  "HelptextPosition": {
    "prefix": "HelptextPosition",
    "body": "HelptextPosition = ${1|template,text,title|};\r\n",
    "description": "Default: template",
    "scope": "source.gessQ"
  },
  "IdClosedMsg": {
    "prefix": "IdClosedMsg",
    "body": "IdClosedMsg = \"\r\n${1:Dieser Zugang wurde bereits verwendet.}\r\n\";\r\n",
    "description": "Default: Invalid respondent ID. This ID has an invalid syntax (only A-Z, a-z and 0-9 are allowed), is not registered to participate or has already been used.",
    "scope": "source.gessQ"
  },
  "ignoreFilter": {
    "prefix": "ignoreFilter",
    "body": "ignoreFilter = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "ignoreAssert": {
    "prefix": "ignoreAssert",
    "body": "ignoreAssert = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "ignoreNoMissing": {
    "prefix": "ignoreNoMissing",
    "body": "ignoreNoMissing = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "InvalidIdMsg": {
    "prefix": "InvalidIdMsg",
    "body": "InvalidIdMsg = \"\r\n${1:Mit Ihrem Link ist leider kein Interview möglich.}\r\n\";\r\n",
    "description": "Default: Invalid respondent ID. This ID has an invalid syntax (only A-Z, a-z and 0-9 are allowed), is not registered to participate or has already been used.",
    "scope": "source.gessQ"
  },
  "InvalidInterviewerMsg": {
    "prefix": "InvalidInterviewerMsg",
    "body": "InvalidInterviewerMsg = \"\r\n${1:Dieser Fall ist Ihnen nicht zugewiesen.}\r\n\";\r\n",
    "description": "Default: This case is assigned to another interviewer.",
    "scope": "source.gessQ"
  },
  "InvalidNavMsg": {
    "prefix": "InvalidNavMsg",
    "body": "InvalidNavMsg = \"\r\n${1:Diese Navigation ist nicht möglich.}\r\n\";\r\n",
    "description": "Default: This navigation is not possible.",
    "scope": "source.gessQ"
  },
  "InvalidSingleMsg": {
    "prefix": "InvalidSingleMsg",
    "body": "InvalidSingleMsg = \"\r\n${1:Die Angaben sind widersprüchlich. Bitte korrigieren.}\r\n\";\r\n",
    "description": "Default: Labels unstimmig.",
    "scope": "source.gessQ"
  },
  "InvalidStateMsg": {
    "prefix": "InvalidStateMsg",
    "body": "InvalidStateMsg = \"\r\n${1:Ihre ID ist leider fehlerhaft. Bitte kontakieren Sie uns über... .}\r\n\";\r\n",
    "description": "Default: Invalid respondent ID. This ID has an invalid syntax (only A-Z, a-z and 0-9 are allowed), is not registered to participate or has already been used.",
    "scope": "source.gessQ"
  },
  "QuotaWriteCondition": {
    "prefix": "QuotaWriteCondition",
    "body": "QuotaWriteCondition = ${1:Bedingung};\r\n",
    "description": "Default: false",
    "scope": "source.gessQ"
  },
  "replaceInOpens": {
    "prefix": "replaceInOpens",
    "body": "replaceInOpens = (\"${1:searchStr}\",\"${2:replacement}\");\r\n",
    "description": "ersetzt in den Opens angegebene Zeichen durch ein anderes Zeichen",
    "scope": "source.gessQ"
  },
  "sanitizeOpens": {
    "prefix": "sanitizeOpens",
    "body": "sanitizeOpens = ${1|None,Basic,SimpleText,Relaxed|};\r\n",
    "description": "Default : Alles wird zugelassen, bereinigt HTML in den Opens (OpenQ und open Label).",
    "scope": "source.gessQ"
  },
  "saveIP": {
    "prefix": "saveIP",
    "body": "saveIP = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "showHelptext": {
    "prefix": "showHelptext",
    "body": "showHelptext = ${1|yes,no|};\r\n",
    "description": "Default: Yes",
    "scope": "source.gessQ"
  },
  "showInterviewerHelptext": {
    "prefix": "showInterviewerHelptext",
    "body": "showInterviewerHelptext = ${1|yes,no|};\r\n",
    "description": "Default: Yes",
    "scope": "source.gessQ"
  },
  "SurveyClosedMsg": {
    "prefix": "SurveyClosedMsg",
    "body": "SurveyClosedMsg = \"\r\n${1:Tut uns leid, die Umfrage ist abgeschlossen.}\r\n\";\r\n",
    "description": "Default: The survey is currently inactive.\r\nPlease try again in a few minutes. If this message still appears, the survey might already have been closed.",
    "scope": "source.gessQ"
  },
  "TemplateOnFinish": {
    "prefix": "TemplateOnFinish",
    "body": "TemplateOnFinish = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "WriteRescueData": {
    "prefix": "WriteRescueData",
    "body": "WriteRescueData = ${1|yes,no|};\r\n",
    "description": "Default: No",
    "scope": "source.gessQ"
  },
  "WriteViewingTime": {
    "prefix": "WriteViewingTime",
    "body": "WriteViewingTime = ${1|none,first,last,all|};\r\n",
    "description": "Default: None",
    "scope": "source.gessQ"
  }
}